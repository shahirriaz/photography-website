{"version":3,"sources":["screens/screen2/InputfieldComponent.js","screens/SummaryComponent.js","screens/screen1/TimeComponent.js","screens/screen1/Screen1.js","inputValidation.js","screens/screen3/Screen3.js","Bestill.js"],"names":["InputfieldComponent","name","value","useStateValue","errorInput","dispatch","useState","email","number","message","inputUser","setInputUser","handleChange","e","target","useEffect","type","className","onChange","style","marginTop","SummaryComponent","date","timePicked","handleNextScreen","error","timeError","marginBottom","format","locale","enGB","onClick","color","TimeComponent","props","id","timeArrayMorning","map","time","idx","tabIndex","handleP","timeArrayAfternoon","timeArrayEvening","Screen1","timeIsVisible","setTimeIsVisible","setDate","setTimePicked","monthlyView","setMonthlyView","columnContainer","document","getElementById","btns","getElementsByClassName","i","length","addEventListener","current","replace","this","onDateChange","minimumDate","Date","MonthlyViewBtn","handleMonthlyView","animateScroll","scrollTo","duration","delay","smooth","open","parseInt","firstChild","nodeValue","display","inputValidation","errors","test","Screen3","Bestill","showingScreen1","setShowingScreen1","showingScreen2","setShowingScreen2","showingScreen3","setShowingScreen3","userDataCorrect","setUserDataCorrect","showSummaryPanel","setShowSummaryPanel","setErrorInput","setError","setTimeError","options","checkErrorsForScreen1","scrollToBottom","window","Object","keys","href","fontSize"],"mappings":"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","file":"static/js/18.2fe55780.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useStateValue } from \"./../../StateProvider\";\r\nimport \"./../../Bestill.css\";\r\nimport Expand from \"react-expand-animated\";\r\n\r\nfunction InputfieldComponent() {\r\n  const [{ errorInput }, dispatch] = useStateValue();\r\n  const [inputUser, setInputUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    number: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  // console.log(errorInput);\r\n\r\n  let name, value;\r\n  const handleChange = e => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    // console.log(value);\r\n\r\n    setInputUser({\r\n      ...inputUser,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //WHAT THIS IS DOING IS THAT IT IS SETTING AN ERROR ON COMPOUNENT MOUNT --> THIS MUST ONLY RUN BASED ON A CONDITION\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"SEND_INPUTUSER\",\r\n      inputUser: inputUser,\r\n    });\r\n  }, [inputUser]);\r\n\r\n  return (\r\n    <div className=\"bestill__input--container\">\r\n      <p>Name</p>\r\n      <div className=\"input--name\">\r\n        <input\r\n          value={inputUser.name}\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n        />\r\n        {errorInput.name && <p className=\"input__error\">{errorInput.name}</p>}\r\n      </div>\r\n      <p style={{ marginTop: errorInput ? \"2rem\" : \"\" }}>Emaill</p>\r\n      <div className=\"input--email\">\r\n        <input\r\n          value={inputUser.email}\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          type=\"email\"\r\n        />\r\n      </div>\r\n      {errorInput.email && <p className=\"input__error\">{errorInput.email}</p>}\r\n\r\n      <p>Phone number</p>\r\n      <div className=\"input--number\">\r\n        <input\r\n          value={inputUser.number}\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n        />\r\n        {errorInput.number && (\r\n          <p className=\"input__error\">{errorInput.number}</p>\r\n        )}\r\n      </div>\r\n\r\n      <p style={{ marginTop: errorInput ? \"2rem\" : \"\" }}>Add your message</p>\r\n      <div className=\"input--message\">\r\n        <input\r\n          value={inputUser.message}\r\n          name=\"message\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      {errorInput.message && (\r\n        <p className=\"input__error\">{errorInput.message}</p>\r\n      )}\r\n      {/* <span>Required Info</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputfieldComponent;\r\n","import React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { enGB } from \"date-fns/locale\";\r\n\r\nfunction SummaryComponent({\r\n  date,\r\n  timePicked,\r\n  handleNextScreen,\r\n  error,\r\n  timeError,\r\n}) {\r\n  // console.log(error);\r\n  // console.log(timeError);\r\n  return (\r\n    <div className=\"wrapperSummray\">\r\n      <div className=\"summary\">\r\n        <h2 className=\"calendar__heading2\">Modeling Shoot</h2>\r\n        <p\r\n          style={{\r\n            marginBottom: \"3rem\",\r\n          }}\r\n        >\r\n          1hr | Meeting\r\n        </p>\r\n        <strong>\r\n          <p>\r\n            {date\r\n              ? format(date, \"dd MMM yyyy\", {\r\n                  locale: enGB,\r\n                })\r\n              : \"Ingen valgt\"}{\" \"}\r\n            &nbsp;\r\n            {timePicked}\r\n          </p>\r\n        </strong>\r\n        <p>Trollskogen, 4085, Hundvåg</p>\r\n        <p>Stavanger, Rogaland</p>\r\n        <button // disabled={loaded}\r\n          onClick={handleNextScreen}\r\n          className=\"summary__btn\"\r\n        >\r\n          Next\r\n        </button>\r\n\r\n        {error && (\r\n          <p style={{ marginTop: \"1rem\", color: \"red\" }}>Vennligst velg dato</p>\r\n        )}\r\n\r\n        {timeError && (\r\n          <p style={{ marginTop: \"1rem\", color: \"red\" }}>\r\n            Vennligst velg klokkeslett\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SummaryComponent;\r\n","import React from \"react\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nfunction TimeComponent(props) {\r\n  return (\r\n    <div id=\"containerElement\" className=\"time--container\">\r\n      <div id=\"test11\" className=\"flex--container\">\r\n        <div className=\"column--one\">\r\n          <h2>Morning</h2>\r\n          {props.timeArrayMorning.map((time, idx) => (\r\n            <p\r\n              className={\"time--stamp\"}\r\n              id={idx}\r\n              tabIndex={idx}\r\n              onClick={e => props.handleP(e)}\r\n            >\r\n              {time}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"column--two\">\r\n          <h2>Afternoon</h2>\r\n          {props.timeArrayAfternoon.map((time, idx) => (\r\n            <p\r\n              className={\"time--stamp\"}\r\n              id={idx + 4}\r\n              tabIndex={idx + 4}\r\n              onClick={e => props.handleP(e)}\r\n            >\r\n              {time}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"column--three\">\r\n          <h2>Evening</h2>\r\n          {props.timeArrayEvening.map((time, idx) => (\r\n            <p\r\n              className={\"time--stamp\"}\r\n              id={idx + 14}\r\n              tabIndex={idx + 14}\r\n              onClick={e => props.handleP(e)}\r\n            >\r\n              {time}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { DatePickerCalendar } from \"react-nice-dates\";\r\nimport \"react-nice-dates/build/style.css\";\r\nimport Expand from \"react-expand-animated\";\r\nimport TimeComponent from \"./TimeComponent\";\r\nimport { enGB } from \"date-fns/locale\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { Link as Scroll } from \"react-scroll\";\r\nimport { animateScroll as animateScroll } from \"react-scroll\";\r\n\r\nfunction Screen1() {\r\n  const [timeIsVisible, setTimeIsVisible] = useState(false);\r\n  const [date, setDate] = useState();\r\n  const [timePicked, setTimePicked] = useState(\"\");\r\n  const [monthlyView, setMonthlyView] = useState(false);\r\n  const [state, dispatch] = useStateValue();\r\n  // const refPtag = useRef();\r\n\r\n  //sending stuff to global state\r\n  useEffect(() => {\r\n    if (date) {\r\n      setTimeIsVisible(true);\r\n      dispatch({\r\n        type: \"SEND_DATE\",\r\n        date: date,\r\n      });\r\n      if (timePicked) {\r\n        dispatch({\r\n          type: \"SEND_TIME\",\r\n          timePicked: timePicked,\r\n        });\r\n      }\r\n    }\r\n  }, [date, timePicked]);\r\n\r\n  useEffect(() => {\r\n    const dispatchAction = () => {\r\n      dispatch({\r\n        type: \"SEND_TIMEISVISIBLE\",\r\n        timeIsVisible: timeIsVisible,\r\n      });\r\n    };\r\n\r\n    dispatchAction();\r\n  }, [timeIsVisible]);\r\n\r\n  var columnContainer = document?.getElementById(\"test11\");\r\n  var btns = columnContainer?.getElementsByClassName(\"time--stamp\");\r\n  for (var i = 0; i < btns?.length; i++) {\r\n    btns[i].addEventListener(\"click\", function () {\r\n      var current = document.getElementsByClassName(\"selected\");\r\n\r\n      // If there's no active class\r\n      if (current?.length > 0) {\r\n        current[0].className = current[0].className.replace(\" selected\", \"\");\r\n        // console.log(current[0].className);\r\n      }\r\n\r\n      // Add the active class to the current/clicked button\r\n      this.className += \" selected\";\r\n    });\r\n  }\r\n  const handleP = e => {\r\n    // refPtag.current.scrollIntoView({ behavior: \"smooth\" });\r\n    for (let i = 0; i < 15; i++) {\r\n      if (parseInt(e.target.id) === i) {\r\n        setTimePicked(e.target.firstChild.nodeValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMonthlyView = () => {\r\n    setMonthlyView(!monthlyView);\r\n    setTimeIsVisible(false);\r\n    const options = {\r\n      duration: 500,\r\n      delay: 0,\r\n      smooth: \"easeOutCubic\",\r\n    };\r\n    animateScroll.scrollTo(100, options);\r\n  };\r\n\r\n  //Arrays\r\n  const timeArrayMorning = [\"10:00 am\", \"10:30 am\", \"11:00 am\", \"11:30 am\"];\r\n  const timeArrayAfternoon = [\r\n    \"12:00 pm\",\r\n    \"12:30 pm\",\r\n    \"13:00 pm\",\r\n    \"13:30 pm\",\r\n    \"14:00 pm\",\r\n    \"14:30 pm\",\r\n    \"15:00 pm\",\r\n    \"15:30 pm\",\r\n    \"16:00 pm\",\r\n    \"16:30 pm\",\r\n  ];\r\n  const timeArrayEvening = [\"5:00 pm\"];\r\n\r\n  return (\r\n    <div>\r\n      <DatePickerCalendar\r\n        date={date}\r\n        onDateChange={setDate}\r\n        locale={enGB}\r\n        minimumDate={new Date()}\r\n      />\r\n\r\n      {date && (\r\n        <MonthlyViewBtn\r\n          timeIsVisible={timeIsVisible}\r\n          handleMonthlyView={handleMonthlyView}\r\n        ></MonthlyViewBtn>\r\n      )}\r\n      <Expand open={timeIsVisible} duration={700}>\r\n        <TimeComponent\r\n          timeArrayMorning={timeArrayMorning}\r\n          timeArrayAfternoon={timeArrayAfternoon}\r\n          timeArrayEvening={timeArrayEvening}\r\n          handleP={handleP}\r\n        />\r\n      </Expand>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Screen1;\r\n\r\nfunction MonthlyViewBtn(props) {\r\n  return (\r\n    <div className=\"btn--container\">\r\n      <button\r\n        className=\"time__btn\"\r\n        style={{\r\n          display: props.timeIsVisible ? \"block\" : \"none\",\r\n        }}\r\n        onClick={props.handleMonthlyView}\r\n      >\r\n        {props.timeIsVisible && \"Hide time\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","const inputValidation = inputUser => {\r\n  let errors = {};\r\n\r\n  //checking if input field is empty\r\n  if (!inputUser.name) {\r\n    errors.name = \"Navn er påkrevd\";\r\n  }\r\n  if (!inputUser.email) {\r\n    errors.email = \"Epost er påkrevd\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(inputUser.email)) {\r\n    errors.email = \"Epost er ugyldig\";\r\n  }\r\n  if (!inputUser.number) {\r\n    errors.number = \"Nummer er påkrevd\";\r\n  }\r\n  if (!inputUser.message) {\r\n    errors.message = \"Melding hadde vært fint:)\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default inputValidation;\r\n","import React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { enGB } from \"date-fns/locale\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nfunction Screen3() {\r\n  const [{ date, timePicked }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"screen3\">\r\n      <div className=\"first--horizontal--row\">\r\n        <div className=\"screen3__heading\">\r\n          <h1>Great You're Booked!</h1>\r\n        </div>\r\n        <div className=\"screen3__desc\">\r\n          <p>A confirmation emil is on its way to you</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"second--horizontal--row\">\r\n        <div className=\"dateColumn\">\r\n          <h2>{format(date, \"dd\", { locale: enGB })}</h2>\r\n          <h3>{format(date, \"MMM\", { locale: enGB })}</h3>\r\n          <p>\r\n            {format(date, \"EEEE\")} {timePicked}\r\n          </p>\r\n        </div>\r\n        <div className=\"confirmationColumn\">\r\n          <h2 style={{ marginBottom: \"4px\" }}>Out door Shoot</h2>\r\n          <p style={{ marginBottom: \"20px\" }}>Staff Member #1</p>\r\n          <p style={{ marginBottom: \"8px\" }}>1 hr | Meeting</p>\r\n          <p>Olaveien 23 Pluto 6700</p>\r\n        </div>\r\n        {/* <button>Add to My Google Calendar</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Screen3;\r\n","import \"./Bestill.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport InputFieldComponent from \"./screens/screen2/InputfieldComponent\";\r\nimport SummaryComponent from \"./screens/SummaryComponent\";\r\nimport Screen1 from \"./screens/screen1/Screen1\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport inputValidation from \"./inputValidation\";\r\nimport { format } from \"date-fns\";\r\nimport { enGB } from \"date-fns/locale\";\r\nimport { animateScroll as animateScroll } from \"react-scroll\";\r\nimport Screen3 from \"./screens/screen3/Screen3\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nfunction Bestill() {\r\n  const [{ date, timePicked, inputUser, timeIsVisible }, dispatch] =\r\n    useStateValue();\r\n  const [showingScreen1, setShowingScreen1] = useState(true);\r\n  const [showingScreen2, setShowingScreen2] = useState(false);\r\n  const [showingScreen3, setShowingScreen3] = useState(false);\r\n  const [userDataCorrect, setUserDataCorrect] = useState(false);\r\n  const [showSummaryPanel, setShowSummaryPanel] = useState(true);\r\n\r\n  // const history = useHistory();\r\n\r\n  //for inputField\r\n  const [errorInput, setErrorInput] = useState({});\r\n\r\n  const [loaded, setLoaded] = useState(true);\r\n\r\n  //Erorr\r\n  const [error, setError] = useState(false);\r\n  const [timeError, setTimeError] = useState(false);\r\n\r\n  const options = {\r\n    duration: 1,\r\n    delay: 0,\r\n    smooth: \"linear\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (date) {\r\n      setError(false);\r\n    }\r\n    if (timePicked) {\r\n      setTimeError(false);\r\n    }\r\n  }, [date, timePicked]);\r\n\r\n  //handleScroll\r\n  useEffect(() => {\r\n    if (timeIsVisible) animateScroll.scrollToBottom(options);\r\n  }, [timeIsVisible]);\r\n\r\n  //scroll to top on component render//rerender\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  //Inputfield component receives error from reducer and renders it\r\n  //Condition must be met to stop showing screen2\r\n  useEffect(() => {\r\n    if (errorInput) {\r\n      dispatch({\r\n        type: \"SEND_INPUT_ERROR\",\r\n        errorInput: errorInput,\r\n      });\r\n    }\r\n    if (Object.keys(errorInput).length === 0 && userDataCorrect) {\r\n      //an input field is not empty\r\n      setShowingScreen2(false);\r\n      setShowingScreen3(true);\r\n      setShowSummaryPanel(false);\r\n    }\r\n  }, [errorInput]);\r\n\r\n  const handleNextScreen = () => {\r\n    setUserDataCorrect(true);\r\n    checkErrorsForScreen1();\r\n\r\n    if (checkErrorsForScreen1()) {\r\n      setShowingScreen1(false);\r\n      setShowingScreen2(true);\r\n    }\r\n\r\n    if (showingScreen2 && inputUser) {\r\n      setErrorInput(inputValidation(inputUser));\r\n    }\r\n\r\n    // setLoaded(!loaded);\r\n    // only reset to top screen if user has picked date and time\r\n    if (date && timePicked) window.scrollTo(0, 0);\r\n  };\r\n\r\n  function checkErrorsForScreen1() {\r\n    // for screen 1\r\n    if (!date) {\r\n      setError(true);\r\n      return false;\r\n    } else if (!timePicked) {\r\n      setTimeError(true);\r\n      return false;\r\n    } else return true;\r\n  }\r\n\r\n  const handleBackClick = () => {\r\n    if (showingScreen2) {\r\n      setShowingScreen2(false);\r\n      setShowingScreen1(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bestill\">\r\n      <div className=\"mainContainer--bestill\">\r\n        <div className=\"secondary_container\">\r\n          {showingScreen1 || showingScreen2 ? (\r\n            <>\r\n              {showingScreen2 ? (\r\n                <button\r\n                  onClick={handleBackClick}\r\n                  className=\"calendar__backBtn\"\r\n                  href=\"\"\r\n                >\r\n                  Back\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <h1 className=\"calendar__firstHeading\">\r\n                {showingScreen1 ? \"Schedule Online\" : \"Add your info\"}\r\n              </h1>\r\n              {showingScreen1 ? (\r\n                <p style={{ fontSize: \"18px\" }}>\r\n                  Selected date:{\" \"}\r\n                  {date\r\n                    ? format(date, \"dd MMM yyyy\", { locale: enGB })\r\n                    : \"Ingen valgt\"}\r\n                  .\r\n                </p>\r\n              ) : (\r\n                <p style={{ fontSize: \"18px\" }}>\r\n                  {showingScreen2 ? \"Tell us a bit about yourself\" : \"\"}\r\n                </p>\r\n              )}\r\n              <div id=\"scrollID\" className=\"calendar__container\">\r\n                {showingScreen1 && <Screen1 />}\r\n                {/* screen 2 */}\r\n                {showingScreen2 && <InputFieldComponent />}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            showingScreen3 && <Screen3 />\r\n          )}\r\n\r\n          {/* <LoadingOverlay\r\n            active={loaded}\r\n            spinner={<CircularProgress />}\r\n            text=\"Loading your content...\"\r\n          > */}\r\n\r\n          {/* </LoadingOverlay> */}\r\n        </div>\r\n\r\n        {/* i will go false when screen 3 shows */}\r\n        {showSummaryPanel && (\r\n          <SummaryComponent\r\n            date={date}\r\n            timePicked={timePicked}\r\n            handleNextScreen={handleNextScreen}\r\n            error={error}\r\n            timeError={timeError}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bestill;\r\n\r\n// useEffect(() => {\r\n//   if (date) {\r\n//     ref?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//     setIsVisible(true);\r\n//     setError(false);\r\n//   }\r\n//   if (timePicked) setTimeError(false);\r\n// }, [date, timePicked]);\r\n\r\n// useEffect(() => {\r\n//   if (loaded) {\r\n//     setTimeout(() => setLoaded(false), 1000);\r\n//   }\r\n//   // console.log(loaded);\r\n// }, [loaded]);\r\n"],"sourceRoot":""}